catalyst 3750

password recovery:
    1. Turn on the switch
    2. Hold MODE button for ~10 seconds
    3. flash_init
    4. load_helper
    5. rename flash:config.text flash:config.text.old
    6. boot
    7. Continue with the configuration dialog [yes/no] 
        - yes will take you through an initial setup process
        - no will take you into the "Switch>" prompt.
    8. After reaching the prompt:
        > enable
        # rename flash:config.text.old flash:config.text    // restores previous config. Not necessary if desire a clean start
            # copy flash:config.text system:running-config

    
clear config:
    > enable
    # write erase
    # delete flash:vlan.dat
    # reload
set password:
    # conf t
    # enable secret <password>

Secure console port:
    # conf t
    # line console 0
    # password <password>
    # login                 // require password above for every connection30 0
    # logging synchronus     // handles the randomly announcements
    # exec-timeout 30 0     // no idea what this does
    # exit
    # service password-encryption       // most passwords set unencrypted so use this and check "show run" to verify

Setup remote access (vty ports):
    # conf t
    # line vty 0    // only 1 remote session
    # password <password>       // This doesn't seem to do anything for me, with or without it.
    # login local            // allows the connection to establsh and prompts for password
    # logging synchronus     // handles the randomly announcements
    # transport input ssh   // prevent non-ssh connections. If someone tries to connect via telnet, it will try a different channel (vty).
    # transport preferred ssh   // I assume if someone is connecting and they are negotiating protocols, I just want to make sure ssh is set.
    # exec-timeout <minutes> <seconds>      // use this to set limits on how long the remote connection can stay established without any movement
    # exit
    # username <user> password <password>
    # service password-encryption       // most passwords set unencrypted so use this and check "show run" to verify

Show commands:
    >/# show IP interface brief // Interfaces
    >/# show run                // shows current configurations in memory
        - shortened for "show running-config"

Save current configs:
    # copy run startup-config   // saves current config

Login Greeting:
    # conf t
    # banner motd     // motd = message of the day 
                        // After clicking enter, you will be prompted for the message
        - can also use "["  and end with "[" (yes the same character) to write more than one line.
        Example:
            - banner motd [
                    hello
                    world![
            
Set Hostname: 
    # conf t
    # host <hostname>

Set up static IP addresses on Interfaces:
    # conf t
    # int vlan 1
    # ip address 192.168.1.1 255.255.255.0
    # no shut       // turn it on
    # ip default-gateway 192.168.1.1
    # exit
    # int range fa 1/0/1 - 48   // selecting multiple interfaces to configure instead of just one.

Clean interfaces / set interface to default settings (or any other variables):
    # conf t
    # default init fa 1/0/1

access control lists (ACLs):
    /* WARNING! You won't be able to remote into the device, but you can still use the console port! */
    # conf t
    # access-list <ID> <deny/permit> <ip address>
    # int fa <port>
    # ip access-group <ID> in

    Example of implicy deny:
    # conf t
    # access-list 1 permit 192.168.1.2
    # access-list 1 deny any
    # int fa 1/0/1
    # ip access-group 1 in

    Example of blocking icmp:
    # conf t
    # access-list 100 deny icmp any any     // the 100-199 range is an EXTENDED range and allows us to do L3 filtering unlike the STANDARD range 1-99 that's limited only to permitting/denying based off IP ONLY!
    # int fa 1/0/1
    # ip access-group 100 in
    // unsure if the order matters.

Vlans: 
    > enable
    # conf t
    # vlan 2                            // creates a new vlan
    # name Guest                        // name the vlan
    # exit
    # int vlan 2                        // turns the vlan ON
    # ip address 192.168.2.1 255.255.255.0  // give it an ip address and subnet mask
    # no shut                           // turn it on
    # exit
    # ip default-gateway 192.168.2.1    // only needed if there is an upper router
    # int fa 1/0/2                      // select port to assign to the vlan
    # switchport mode access            // set the port mode to access
    # switchport access vlan 2          // set the port on vlan 2
    # end
    # show vlan

Inter Vlan routing:
    > enable
    # conf t
    # ip routing                        // enable routing
    // if it still isn't working, ping all the endpoints from the router for arp resolution and try from the hosts
    

Disable cisco default password recovery:
    # conf t
    # no service password-recovery

DHCP:
    # conf t
    # ip dhcp pool <name>
    # network <network> /<CIDR> 
        OR # network <network> <subnet mask>
    // the rest are optional parameters
    # default-router <IP address> <IP address 2> <and so on to specify multiple alternative routers>
    # domain-name <domain>
    # dns-server <IP address> <IP address 2> <and so on to specify multiple alternative dns servers>
    # lease <number in days>

    Example:
    # conf t
    # service dhcp      // start the service
    # no ip dhcp conflict logging       // disable recording dhcp address clonficts
    # ip dhcp pool DHCP         // enter dhcp mode to begin configuring the service
    # network 192.168.1.0 /24
        OR # network 192.168.1.0 255.255.255.0
    # default-router 192.168.1.1
    # domain-name support.local
    # dns-server 192.168.1.1
    # lease 2               // The default lease time is 1 day, so use this to change that.
    # exit
    # ip dhcp excluded-address 192.168.1.0 192.168.1.100        // exclude addresses 192.168.1.0 to 192.168.1.100. Don't know if dhcp will attempt to assign a .0, but Cisco says, "The DHCP Server assumes that all IP     addresses in a DHCP address poolsubnet are available for assigning to DHCP clients."

TACACS+:
    # conf t
    # tacacs-server host 192.168.1.1
    # aaa new-model
    # aaa group server tacacs+ <name>
    (config-sh-tacacas+)# server <IP address>
    # end
    # show tacacs
    # conf t
    # aaa authentication login default group tacacs+
    # line [ vty | console | tty ] <number>
    # login authentication default
    # end
    # debug tacacs
    # debug aaa authentication

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ipv6 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

enable IPv6:
    # conf t
    # sdm prefer dual-ipv5-and-ipv6 default     // sdm = switch database management template. default = balanced distribution of resources, routing = routing is priority, and vlan = vlan is priority
    # exit
    # reload

Handle default http server (Catalyst 3750 Series Experess Setup webpage):
    # conf t
    - reachable at ip address via http and older https
    - Options available: enable/disable telnet, enable/disable snmp, disable/enable IPv6, set password (this is the password to use the "enable" command), IP address, subnet mask, default gateway, hostname, time,
    - after fininshed configured either:
        # no ip http server
        - this will close the http but leave the https version alive.
        - OR close BOTH!
        # no ip http server && no ip http secure-server

SNMP & SNMP Traps:
    # conf t
    - Enable snmp
    # snmp-server community public ro       // read only
    # snmp-server community private rw      // read-write
    # snmp-server group <group name> v1
    # snmp-server user <user name> <assigned group> v1
    # snmp-server host <IP address host to receive traps> version 3 <auth> <public|private>
        # snmp-server host <IP> version 1 <public|private>
    # snmp-server enable traps

    # end
    # show snmp         // confirm it's enable and where it's being sent (at the bottom)

    Quick test: snmpwalk -v 1 -u user -c public 192.168.1.1 iso.0.8802.1.1.2.1.3.7.1.4.3
    SNMPv3 test: 
